---
import { getCollection } from "astro:content";
const mostrarSVG = await getCollection("habilidades")
// const rutaImg = "https://w7.pngwing.com/pngs/562/568/png-transparent-suit-graphy-man-with-crossed-arms-company-nice-necktie-recruiter-business-thumbnail.png";
const rutaImg = "";
---


<svg class="content-view" width="732" height="790" viewBox="0 0 732 790" fill="none">
  <!-- Imagen Perfil -->
  <rect class="perfil" x="414.729" y="1.40434" width="401.689" height="668" rx="200.845" transform="rotate(38.2248 414.729 1.40434)" fill="url(#pattern0_64_303)" stroke="#3E0CC1" stroke-width="2" />
  <!-- Secciones donde se mostraran los lenguajes o habilidades -->
  <rect class="section-icons" x="602.567" y="457" width="81.7995" height="359.705" rx="40.8998" transform="rotate(38.2248 602.567 457)" fill="#FCFBFF"/>
  <rect class="section-icons" x="273.567" y="1" width="81.7995" height="359.705" rx="40.8998" transform="rotate(38.2248 273.567 1)" fill="white"/>
  <!-- Lenguajes o habilidades que se mostraran (AQUI VAN LOS SVG DE ESTOS) -->
  {
    mostrarSVG.map((lenguaje) => (
      <g clip-path={'url(#habilidad'+ lenguaje.data.category + ')'} class="icon" data-coordX={lenguaje.data.coordX} data-coordY={lenguaje.data.coordY}>
        {
          lenguaje.data.positionItem !== null && <Fragment set:html={lenguaje.body} />
        }
      </g>
    ))
  }
  <!-- <g clip-path="url(#habilidad2)"></g> -->
  <g clip-path="url(#habilidad3)" ></g>
  <g clip-path="url(#habilidad4)"></g>
  <g clip-path="url(#habilidad5)"></g>
  <g clip-path="url(#habilidad6)"></g>
  <g clip-path="url(#habilidad7)"></g>
  <g clip-path="url(#habilidad8)"></g>
  <g clip-path="url(#habilidad9)"></g>
  <g clip-path="url(#habilidad10)"></g>

  <!-- FUNCIONES -->
  <defs>
    <pattern id="pattern0_64_303" patternContentUnits="objectBoundingBox" width="1" height="1">
      <use xlink:href="#image0_64_303" transform="matrix(0.00105447 -0.000515662 0.000957819 0.000711048 -0.245281 0.3066495)" />
    </pattern>
    <!-- xlink:href={urlPerfil} -->
    <image id="image0_64_303" width="650" height="1000"  xlink:href={rutaImg} data-imagesrc={rutaImg}/>  
    <!-- MOSTRAR UBICACION DE CADA LENGUAJE o HABILIDAD -->
    <clipPath id="habilidad1"><rect class="boxIcon" x="255" y="45" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad2"><rect class="boxIcon" x="218" y="93" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad3"><rect class="boxIcon" x="178" y="148" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad4"><rect class="boxIcon" x="133" y="200" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad5"><rect class="boxIcon" x="93"  y="255" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad6"><rect class="boxIcon" x="587" y="495" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad7"><rect class="boxIcon" x="547" y="549" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad8"><rect class="boxIcon" x="507" y="604" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad9"><rect class="boxIcon" x="462" y="656" width="40" height="40" rx="5"/></clipPath>
    <clipPath id="habilidad10"><rect class="boxIcon" x="422" y="711" width="40" height="40" rx="5"/></clipPath>
  </defs>
</svg>

<script>
  document.addEventListener("astro:page-load", () => {
    // Agregar imagen alterna si no tiene o no funciona la imagen
    const $imageSvg = document.getElementById("image0_64_303");
    let image = new Image();
    image.src = $imageSvg?.dataset.imagesrc ?? "";
    if(!image.complete) {
      $imageSvg?.setAttribute("xlink:href", "images/default/imageDefault.jpg")
    }
    // Añadir el tamaño y la posicion de cada icono
    let $svgicons = document.querySelectorAll(".content-view svg");
    $svgicons?.forEach(svg => {
      if(svg) {
        svg.setAttribute("width", "40")
        svg.setAttribute("height", "40")
        let coordX = svg.parentElement?.dataset.coordx ;
        let coordY = svg.parentElement?.dataset.coordy ;
        if(coordX != undefined && coordY != undefined) {
          svg.setAttribute("x", coordX)
          svg.setAttribute("y", coordY)
        }
        }
    })
  })
</script>


<style>
  .content-view {
    transform:
      perspective(800px)
      rotateY(10deg) scale(0.9)
      rotateX(10deg);
    opacity: 0.8;
    transition: 0.6s ease all;
    &:hover {
      transform:
        perspective(800px)
        rotateY(-10deg)
        translateY(-50px)
        rotateX(10deg)
        scale(1);
      opacity: 1;
    }
  }
.icon {
  animation: animationOpacity 1.5s ease-in-out;
}
.boxIcon {
  width: 40px;
  height: 40px;
}
.section-icons {
  animation: animationOpacity 1s ease;
}


.content-view {
  min-height: 20rem;
  height: 100%;
	min-width: 23rem;
  transition: all 0.5s ease;
}

/* version mobile */
@media only screen and (max-width: 660px) {
	.content-view {
		min-width: 5rem;
		min-height: 10rem;
		height: 100%;
	}
}
</style>